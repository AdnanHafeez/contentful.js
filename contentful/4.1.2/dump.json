[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "lib/contentful.js",
    "content": "/**\n * Contentful Delivery API SDK. Allows you to create instances of a client\n * with access to the Contentful Content Delivery API.\n * @namespace contentful\n * @see ContentfulClientAPI\n */\n\nimport assign from 'lodash/assign'\nimport axios from 'axios'\nimport version from '../version'\nimport {createHttpClient} from 'contentful-sdk-core'\nimport createContentfulApi from './create-contentful-api'\nimport createLinkResolver from './create-link-resolver'\n\n/**\n * Create a client instance\n * @func\n * @name createClient\n * @memberof contentful\n * @param {Object} params - Client initialization parameters\n * @prop {string} params.space - Space ID\n * @prop {string} params.accessToken - Contentful CDA Access Token\n * @prop {boolean=} params.insecure - Requests will be made over http instead of the default https (default: true)\n * @prop {string=} params.host - API host (default: cdn.contentful.com). Also usable with preview.contentful.com.\n * @prop {Object=} params.agent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=} params.headers - Optional additional headers\n * @prop {boolean=} params.resolveLinks - If we should resolve links between entries\n * @returns {ContentfulClientAPI.ClientAPI}\n * @example\n * const client = contentful.createClient({\n *  accessToken: 'myAccessToken',\n *  space: 'mySpaceId'\n * })\n */\nexport function createClient (params) {\n  if (!params.accessToken) {\n    throw new TypeError('Expected parameter accessToken')\n  }\n\n  if (!params.space) {\n    throw new TypeError('Expected parameter space')\n  }\n\n  // Use resolveLinks param if specified, otherwise default to true\n  const resolveLinks = !!('resolveLinks' in params ? params.resolveLinks : true)\n  const shouldLinksResolve = createLinkResolver(resolveLinks)\n\n  params.defaultHostname = 'cdn.contentful.com'\n  params.headers = assign(params.headers, {\n    'Content-Type': 'application/vnd.contentful.delivery.v1+json',\n    'X-Contentful-User-Agent': 'contentful.js/' + version\n  })\n\n  const http = createHttpClient(axios, params)\n\n  return createContentfulApi({\n    http: http,\n    shouldLinksResolve: shouldLinksResolve\n  })\n}\n",
    "static": true,
    "longname": "lib/contentful.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "function",
    "name": "createClient",
    "memberof": "lib/contentful.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/contentful.js~createClient",
    "access": null,
    "export": true,
    "importPath": "contentful/lib/contentful.js",
    "importStyle": "{createClient}",
    "description": "Create a client instance",
    "examples": [
      "const client = contentful.createClient({\n accessToken: 'myAccessToken',\n space: 'mySpaceId'\n})"
    ],
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@func",
        "tagValue": ""
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} params.space - Space ID"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} params.accessToken - Contentful CDA Access Token"
      },
      {
        "tagName": "@prop",
        "tagValue": "{boolean=} params.insecure - Requests will be made over http instead of the default https (default: true)"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string=} params.host - API host (default: cdn.contentful.com). Also usable with preview.contentful.com."
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object=} params.agent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object=} params.headers - Optional additional headers"
      },
      {
        "tagName": "@prop",
        "tagValue": "{boolean=} params.resolveLinks - If we should resolve links between entries"
      },
      {
        "tagName": "@returns",
        "tagValue": "{ContentfulClientAPI.ClientAPI}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Client initialization parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ContentfulClientAPI.ClientAPI"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2,
    "kind": "file",
    "name": "lib/create-contentful-api.js",
    "content": "/**\n * Contentful Delivery API Client. Contains methods which allow access to the\n * different kinds of entities present in Contentful (Entries, Assets, etc).\n * @namespace ContentfulClientAPI\n * @see Entities\n */\n\n/**\n * The different kinds of top level entities you can find in Contentful\n * @namespace Entities\n */\n\n/**\n * System metadata. See <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/introduction/common-resource-attributes\">Common Resource Attributes</a> for more details.\n * @memberof Entities\n * @typedef Sys\n * @prop {string} type\n * @prop {string} id\n * @prop {Entities.Link} space\n * @prop {string} createdAt\n * @prop {string} updatedAt\n * @prop {number} revision\n */\n\n/**\n * Link to another entity. See <a href=\"https://www.contentful.com/developers/docs/concepts/links/\">Links</a> for more details.\n * @memberof Entities\n * @typedef Link\n * @prop {string} type - type of this entity. Always link.\n * @prop {string} id\n * @prop {string} linkType - type of this link. If defined, either Entry or Asset\n */\n\n/**\n * @memberof ContentfulClientAPI\n * @typedef {Object} ClientAPI\n * @prop {function} getSpace\n * @prop {function} getContentType\n * @prop {function} getContentTypes\n * @prop {function} getEntry\n * @prop {function} getEntries\n * @prop {function} getAsset\n * @prop {function} getAssets\n * @prop {function} parseEntries\n * @prop {function} sync\n */\n\nimport {createRequestConfig} from 'contentful-sdk-core'\nimport entities from './entities'\nimport pagedSync from './paged-sync'\n\n/**\n * Creates API object with methods to access functionality from Contentful's\n * Delivery API\n * @private\n * @param {Object} params - API initialization params\n * @prop {Object} http - HTTP client instance\n * @prop {Object} entities - Object with wrapper methods for each kind of entity\n * @prop {Function} shouldLinksResolve - Link resolver preconfigured with global setting\n * @return {ClientAPI}\n */\nexport default function createContentfulApi ({http, shouldLinksResolve}) {\n  const {wrapSpace} = entities.space\n  const {wrapContentType, wrapContentTypeCollection} = entities.contentType\n  const {wrapEntry, wrapEntryCollection} = entities.entry\n  const {wrapAsset, wrapAssetCollection} = entities.asset\n\n  function errorHandler (error) {\n    if (error.data) {\n      throw error.data\n    }\n    throw error\n  }\n\n  /**\n   * Gets the Space which the client is currently configured to use\n   * @memberof ContentfulClientAPI\n   * @return {Promise<Entities.Space>} Promise for a Space\n   * @example\n   * client.getSpace()\n   * .then(space => console.log(space))\n   */\n  function getSpace () {\n    return http.get('')\n      .then((response) => wrapSpace(response.data), errorHandler)\n  }\n\n  /**\n   * Gets a Content Type\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @return {Promise<Entities.ContentType>} Promise for a Content Type\n   * @example\n   * client.getContentType('contentTypeId')\n   * .then(contentType => console.log(contentType))\n   */\n  function getContentType (id) {\n    return http.get('content_types/' + id)\n      .then((response) => wrapContentType(response.data), errorHandler)\n  }\n\n  /**\n   * Gets a collection of Content Types\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.ContentTypeCollection>} Promise for a collection of Content Types\n   * @example\n   * client.getContentTypes()\n   * .then(contentTypes => console.log(contentTypes.items))\n   */\n  function getContentTypes (query = {}) {\n    return http.get('content_types', createRequestConfig({query: query}))\n      .then((response) => wrapContentTypeCollection(response.data), errorHandler)\n  }\n\n  /**\n   * Gets an Entry\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\n   * @return {Promise<Entities.Entry>} Promise for an Entry\n   * @example\n   * client.getEntry('entryId')\n   * .then(entry => console.log(entry))\n   */\n  function getEntry (id, query = {}) {\n    normalizeSelect(query)\n    return http.get('entries/' + id, createRequestConfig({query: query}))\n      .then((response) => wrapEntry(response.data), errorHandler)\n  }\n\n  /**\n   * Gets a collection of Entries\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @param  {boolean=} query.resolveLinks - When true, links to other Entries or Assets are resolved. Default: true.\n   * @return {Promise<Entities.EntryCollection>} Promise for a collection of Entries\n   * @example\n   * client.getEntries({content_type: 'contentTypeId'})\n   * .then(entries => console.log(entries.items))\n   */\n  function getEntries (query = {}) {\n    const resolveLinks = shouldLinksResolve(query)\n    const resolveForAllLocales = (query.locale && query.locale === '*')\n    normalizeSelect(query)\n    return http.get('entries', createRequestConfig({query: query}))\n      .then((response) => wrapEntryCollection(response.data, resolveLinks, resolveForAllLocales), errorHandler)\n  }\n  /**\n   * Gets an Asset\n   * @memberof ContentfulClientAPI\n   * @param  {string} id\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\n   * @return {Promise<Entities.Asset>} Promise for an Asset\n   * @example\n   * client.getAsset('assetId')\n   * .then(asset => console.log(asset))\n   */\n  function getAsset (id, query = {}) {\n    normalizeSelect(query)\n    return http.get('assets/' + id, createRequestConfig({query: query}))\n      .then((response) => wrapAsset(response.data), errorHandler)\n  }\n\n  /**\n   * Gets a collection of Assets\n   * @memberof ContentfulClientAPI\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\n   * @return {Promise<Entities.AssetCollection>} Promise for a collection of Assets\n   * @example\n   * client.getAssets()\n   * .then(assets => console.log(assets.items))\n   */\n  function getAssets (query = {}) {\n    normalizeSelect(query)\n    return http.get('assets', createRequestConfig({query: query}))\n      .then((response) => wrapAssetCollection(response.data), errorHandler)\n  }\n\n  /**\n   * Synchronizes either all the content or only new content since last sync\n   * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n   * <strong> Important note: </strong> The the sync api endpoint does not support include or link resolution.\n   * However contentful.js is doing link resolution client side if you only make an initial sync.\n   * For the delta sync (using nextSyncToken) it is not possible since the sdk wont have access to all the data to make such an operation.\n   * @memberof ContentfulClientAPI\n   * @param  {Object} query - Query object for the sync call. One of initial or nextSyncToken always needs to be specified, but not both.\n   * @param  {boolean?} query.initial - Indicates if this is the first sync. Use it if you don't have a sync token.\n   * @param  {string?} query.nextSyncToken - The token you got the last time you used this method. Ensures you only get changed content.\n   * @param  {string=} query.type - Filter by this type (Entry or Asset)\n   * @param  {string=} query.content_type - Filter by this content type id\n   * @param  {boolean=} query.resolveLinks - When true, links to other Entries or Assets are resolved. Default: true.\n   * @return {Promise<Sync.SyncCollection>} Promise for the collection resulting of a sync operation\n   * @example\n   * client.sync()\n   * .then((response) => console.log(response.entries, response.assets, response.nextSyncToken))\n   */\n  function sync (query = {}) {\n    const resolveLinks = shouldLinksResolve(query)\n    return pagedSync(http, query, resolveLinks)\n  }\n\n  /**\n  * Parse raw json data into collection of entry objects.Links will be resolved also\n  * @memberof ContentfulClientAPI\n  * @param {Object} raw json data\n  * @example\n  * let data = {items: [\n  *    {\n  *    sys: {type: 'Entry', locale: 'en-US'},\n  *    fields: {\n  *      animal: {sys: {type: 'Link', linkType: 'Animal', id: 'oink'}},\n  *      anotheranimal: {sys: {type: 'Link', linkType: 'Animal', id: 'middle-parrot'}}\n  *    }\n  *  }\n  * ],\n  * includes: {\n  *  Animal: [\n  *    {\n  *      sys: {type: 'Animal', id: 'oink', locale: 'en-US'},\n  *      fields: {\n  *        name: 'Pig',\n  *        friend: {sys: {type: 'Link', linkType: 'Animal', id: 'groundhog'}}\n  *      }\n  *    }\n  *   ]\n  *  }\n  * }\n  * console.log( data.items[0].fields.foo ); // undefined\n  * let parsedData = client.parseEntries(data);\n  * console.log( parsedData.items[0].fields.foo ); // foo\n  */\n  function parseEntries (data) {\n    return wrapEntryCollection(data, true, false)\n  }\n  /*\n   * sdk relies heavily on sys metadata\n   * so we cannot omit the sys property on sdk level\n   * */\n  function normalizeSelect (query) {\n    if (query.select && !/sys/i.test(query.select)) {\n      query.select += ',sys'\n    }\n  }\n\n  return {\n    getSpace: getSpace,\n    getContentType: getContentType,\n    getContentTypes: getContentTypes,\n    getEntry: getEntry,\n    getEntries: getEntries,\n    getAsset: getAsset,\n    getAssets: getAssets,\n    parseEntries: parseEntries,\n    sync: sync\n  }\n}\n",
    "static": true,
    "longname": "lib/create-contentful-api.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3,
    "kind": "typedef",
    "name": "Sys",
    "memberof": "lib/create-contentful-api.js",
    "static": true,
    "longname": "lib/create-contentful-api.js~Sys",
    "access": null,
    "description": "System metadata. See <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/introduction/common-resource-attributes\">Common Resource Attributes</a> for more details.",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{string} type"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} id"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Entities.Link} space"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} createdAt"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} updatedAt"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} revision"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Sys"
    }
  },
  {
    "__docId__": 4,
    "kind": "typedef",
    "name": "Link",
    "memberof": "lib/create-contentful-api.js",
    "static": true,
    "longname": "lib/create-contentful-api.js~Link",
    "access": null,
    "description": "Link to another entity. See <a href=\"https://www.contentful.com/developers/docs/concepts/links/\">Links</a> for more details.",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{string} type - type of this entity. Always link."
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} id"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} linkType - type of this link. If defined, either Entry or Asset"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Link"
    }
  },
  {
    "__docId__": 5,
    "kind": "typedef",
    "name": "ClientAPI",
    "memberof": "lib/create-contentful-api.js",
    "static": true,
    "longname": "lib/create-contentful-api.js~ClientAPI",
    "access": null,
    "description": "",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{function} getSpace"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} getContentType"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} getContentTypes"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} getEntry"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} getEntries"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} getAsset"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} getAssets"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} parseEntries"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function} sync"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ClientAPI"
    }
  },
  {
    "__docId__": 6,
    "kind": "function",
    "name": "createContentfulApi",
    "memberof": "lib/create-contentful-api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/create-contentful-api.js~createContentfulApi",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/create-contentful-api.js",
    "importStyle": "createContentfulApi",
    "description": "Creates API object with methods to access functionality from Contentful's\nDelivery API",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{Object} http - HTTP client instance"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object} entities - Object with wrapper methods for each kind of entity"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Function} shouldLinksResolve - Link resolver preconfigured with global setting"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "API initialization params"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ClientAPI"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 7,
    "kind": "file",
    "name": "lib/create-link-resolver.js",
    "content": "/**\n * Link resolution can be set globally, or it can be turned off for the methods\n * which make use of it. The local setting always overrides the global setting.\n * @private\n * @param {boolean} globalSetting - Global library setting for link resolution\n * @returns {function} Link resolver method preconfigured with global setting\n */\nexport default function createLinkResolver (globalSetting) {\n  /**\n   * Link resolver method\n   * @param {Object} query - regular query object used for collection endpoints\n   */\n  return function shouldLinksResolve (query) {\n    return !!('resolveLinks' in query ? query.resolveLinks : globalSetting)\n  }\n}\n",
    "static": true,
    "longname": "lib/create-link-resolver.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 8,
    "kind": "function",
    "name": "createLinkResolver",
    "memberof": "lib/create-link-resolver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/create-link-resolver.js~createLinkResolver",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/create-link-resolver.js",
    "importStyle": "createLinkResolver",
    "description": "Link resolution can be set globally, or it can be turned off for the methods\nwhich make use of it. The local setting always overrides the global setting.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} Link resolver method preconfigured with global setting"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "globalSetting",
        "description": "Global library setting for link resolution"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "Link resolver method preconfigured with global setting"
    }
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "lib/entities/asset.js",
    "content": "import cloneDeep from 'lodash/cloneDeep'\nimport {toPlainObject, freezeSys} from 'contentful-sdk-core'\n\n/**\n * @memberof Entities\n * @typedef Asset\n * @prop {Entities.Sys} sys - Standard system metadata with additional entry specific properties\n * @prop {string=} sys.locale - If present, indicates the locale which this asset uses\n * @prop {Object} fields - Object with content for each field\n * @prop {string} fields.title - Title for this asset\n * @prop {string} fields.description - Description for this asset\n * @prop {Object} fields.file - File object for this asset\n * @prop {string} fields.file.fileName - Name for the file\n * @prop {string} fields.file.contentType - Mime type for the file\n * @prop {string} fields.file.url - Url where the file is available at.\n * @prop {Object} fields.file.details - Details for the file, depending on file type (example: image size in bytes, etc)\n * @prop {function(): Object} toPlainObject() - Returns this Asset as a plain JS object\n */\n\n/**\n * @private\n * @param {Object} data - Raw asset data\n * @return {Asset} Wrapped asset data\n */\nexport function wrapAsset (data) {\n  return freezeSys(toPlainObject(cloneDeep(data)))\n}\n\n/**\n * @memberof Entities\n * @typedef AssetCollection\n * @prop {number} total\n * @prop {number} skip\n * @prop {number} limit\n * @prop {Array<Entities.Asset>} items\n * @prop {function(): Object} toPlainObject() - Returns this Asset collection as a plain JS object\n */\n\n/**\n * @private\n * @param {Object} data - Raw asset collection data\n * @return {AssetCollection} Wrapped asset collection data\n */\nexport function wrapAssetCollection (data) {\n  return freezeSys(toPlainObject(cloneDeep(data)))\n}\n",
    "static": true,
    "longname": "lib/entities/asset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "typedef",
    "name": "Asset",
    "memberof": "lib/entities/asset.js",
    "static": true,
    "longname": "lib/entities/asset.js~Asset",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{Entities.Sys} sys - Standard system metadata with additional entry specific properties"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string=} sys.locale - If present, indicates the locale which this asset uses"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object} fields - Object with content for each field"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} fields.title - Title for this asset"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} fields.description - Description for this asset"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object} fields.file - File object for this asset"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} fields.file.fileName - Name for the file"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} fields.file.contentType - Mime type for the file"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} fields.file.url - Url where the file is available at."
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object} fields.file.details - Details for the file, depending on file type (example: image size in bytes, etc)"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Asset as a plain JS object"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Asset"
    }
  },
  {
    "__docId__": 11,
    "kind": "function",
    "name": "wrapAsset",
    "memberof": "lib/entities/asset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/asset.js~wrapAsset",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/entities/asset.js",
    "importStyle": "{wrapAsset}",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Raw asset data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Asset"
      ],
      "spread": false,
      "description": "Wrapped asset data"
    }
  },
  {
    "__docId__": 12,
    "kind": "typedef",
    "name": "AssetCollection",
    "memberof": "lib/entities/asset.js",
    "static": true,
    "longname": "lib/entities/asset.js~AssetCollection",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{number} total"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} skip"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} limit"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<Entities.Asset>} items"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Asset collection as a plain JS object"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "AssetCollection"
    }
  },
  {
    "__docId__": 13,
    "kind": "function",
    "name": "wrapAssetCollection",
    "memberof": "lib/entities/asset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/asset.js~wrapAssetCollection",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/entities/asset.js",
    "importStyle": "{wrapAssetCollection}",
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Raw asset collection data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AssetCollection"
      ],
      "spread": false,
      "description": "Wrapped asset collection data"
    }
  },
  {
    "__docId__": 14,
    "kind": "file",
    "name": "lib/entities/content-type.js",
    "content": "import cloneDeep from 'lodash/cloneDeep'\nimport {toPlainObject, freezeSys} from 'contentful-sdk-core'\n\n/**\n * @memberof Entities\n * @typedef ContentType\n * @prop {Entities.Sys} sys - System metadata\n * @prop {string} name\n * @prop {string} description\n * @prop {string} displayField - Field used as the main display field for Entries\n * @prop {string} Array<Field> - All the fields contained in this Content Type\n * @prop {function(): Object} toPlainObject() - Returns this Content Type as a plain JS object\n */\n\n/**\n * @private\n * @param {Object} data - Raw content type data\n * @return {ContentType} Wrapped content type data\n */\nexport function wrapContentType (data) {\n  return freezeSys(toPlainObject(cloneDeep(data)))\n}\n\n/**\n * @memberof Entities\n * @typedef ContentTypeCollection\n * @prop {number} total\n * @prop {number} skip\n * @prop {number} limit\n * @prop {Array<Entities.ContentType>} items\n * @prop {function(): Object} toPlainObject() - Returns this Content Type collection as a plain JS object\n */\n\n/**\n * @private\n * @param {Object} data - Raw content type collection data\n * @return {ContentTypeCollection} Wrapped content type collection data\n */\nexport function wrapContentTypeCollection (data) {\n  return freezeSys(toPlainObject(cloneDeep(data)))\n}\n",
    "static": true,
    "longname": "lib/entities/content-type.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 15,
    "kind": "typedef",
    "name": "ContentType",
    "memberof": "lib/entities/content-type.js",
    "static": true,
    "longname": "lib/entities/content-type.js~ContentType",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{Entities.Sys} sys - System metadata"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} name"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} description"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} displayField - Field used as the main display field for Entries"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} Array<Field> - All the fields contained in this Content Type"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Content Type as a plain JS object"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "ContentType"
    }
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "wrapContentType",
    "memberof": "lib/entities/content-type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/content-type.js~wrapContentType",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/entities/content-type.js",
    "importStyle": "{wrapContentType}",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Raw content type data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ContentType"
      ],
      "spread": false,
      "description": "Wrapped content type data"
    }
  },
  {
    "__docId__": 17,
    "kind": "typedef",
    "name": "ContentTypeCollection",
    "memberof": "lib/entities/content-type.js",
    "static": true,
    "longname": "lib/entities/content-type.js~ContentTypeCollection",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{number} total"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} skip"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} limit"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<Entities.ContentType>} items"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Content Type collection as a plain JS object"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "ContentTypeCollection"
    }
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "wrapContentTypeCollection",
    "memberof": "lib/entities/content-type.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/content-type.js~wrapContentTypeCollection",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/entities/content-type.js",
    "importStyle": "{wrapContentTypeCollection}",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Raw content type collection data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ContentTypeCollection"
      ],
      "spread": false,
      "description": "Wrapped content type collection data"
    }
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "lib/entities/entry.js",
    "content": "import cloneDeep from 'lodash/cloneDeep'\nimport uniq from 'lodash/uniq'\nimport {toPlainObject, freezeSys} from 'contentful-sdk-core'\nimport mixinLinkGetters from '../mixins/link-getters'\nimport mixinStringifySafe from '../mixins/stringify-safe'\n\n/**\n * Types of fields found in an Entry\n * @namespace EntryFields\n */\n\n/**\n * @memberof EntryFields\n * @typedef Symbol\n * @type string\n */\n\n/**\n * @memberof EntryFields\n * @typedef Text\n * @type string\n */\n\n/**\n * @memberof EntryFields\n * @typedef Integer\n * @type number\n */\n\n/**\n * @memberof EntryFields\n * @typedef Number\n * @type number\n */\n\n/**\n * @memberof EntryFields\n * @typedef Date\n * @type string\n */\n\n/**\n * @memberof EntryFields\n * @typedef Boolean\n * @type boolean\n */\n\n/**\n * @memberof EntryFields\n * @typedef Location\n * @prop {string} lat - latitude\n * @prop {string} lon - longitude\n */\n\n/**\n * A Field in an Entry can have one of the following types that can be defined in Contentful. See <a href=\"https://www.contentful.com/developers/docs/references/field-type/\">Field Types</a> for more details.\n * @memberof Entities\n * @typedef Field\n * @type EntryFields.Symbol | EntryFields.Text | EntryFields.Integer | EntryFields.Number | EntryFields.Date | EntryFields.Boolean | EntryFields.Location | Entities.Link | Array<EntryFields.Symbol|Entities.Link> | Object\n */\n\n/**\n * @memberof Entities\n * @typedef Entry\n * @prop {Entities.Sys} sys - Standard system metadata with additional entry specific properties\n * @prop {Entities.Link} sys.contentType - Content Type used by this Entry\n * @prop {string=} sys.locale - If present, indicates the locale which this entry uses\n * @prop {Object<EntryFields.Field>} fields - Object with content for each field\n * @prop {function(): Object} toPlainObject() - Returns this Entry as a plain JS object\n */\n\n/**\n * @private\n * @param {Object} data - Raw entry data\n * @return {Entry} Wrapped entry data\n */\nexport function wrapEntry (data) {\n  return freezeSys(toPlainObject(cloneDeep(data)))\n}\n\n/**\n * @memberof Entities\n * @typedef EntryCollection\n * @prop {number} total\n * @prop {number} skip\n * @prop {number} limit\n * @prop {Array<Entities.Entry>} items\n * @prop {Array<Object>=} errors - Array of errors that might occur when retrieving entries.\n * @prop {Object<Array>=} includes - Object with arrays of includes for Entries and Assets. This will be present if resolveLinks is on, and any linked entries or assets exist. Those links will be resolved in the Entries present in the items array, but they are also present here in raw form.\n * @prop {function(): Object} toPlainObject() - Returns this Entry collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the entry collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Data is also mixed in with link getters if links exist and includes were requested\n * @private\n * @param {Object} data - Raw entry collection data\n * @return {EntryCollection} Wrapped entry collection data\n */\nexport function wrapEntryCollection (data, resolveLinks, resolveForAllLocales) {\n  const wrappedData = mixinStringifySafe(toPlainObject(cloneDeep(data)))\n  if (resolveLinks) {\n    const includes = prepareIncludes(wrappedData.includes, wrappedData.items)\n    mixinLinkGetters(wrappedData.items, includes, resolveForAllLocales)\n  }\n  return freezeSys(wrappedData)\n}\n\nfunction prepareIncludes (includes = {}, items) {\n  includes.Entry = includes.Entry || []\n  includes.Entry = uniq(includes.Entry.concat(cloneDeep(items)))\n  return includes\n}\n",
    "static": true,
    "longname": "lib/entities/entry.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "typedef",
    "name": "Symbol",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Symbol",
    "access": null,
    "description": "",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Symbol"
    }
  },
  {
    "__docId__": 21,
    "kind": "typedef",
    "name": "Text",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Text",
    "access": null,
    "description": "",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Text"
    }
  },
  {
    "__docId__": 22,
    "kind": "typedef",
    "name": "Integer",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Integer",
    "access": null,
    "description": "",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Integer"
    }
  },
  {
    "__docId__": 23,
    "kind": "typedef",
    "name": "Number",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Number",
    "access": null,
    "description": "",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Number"
    }
  },
  {
    "__docId__": 24,
    "kind": "typedef",
    "name": "Date",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Date",
    "access": null,
    "description": "",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Date"
    }
  },
  {
    "__docId__": 25,
    "kind": "typedef",
    "name": "Boolean",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Boolean",
    "access": null,
    "description": "",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Boolean"
    }
  },
  {
    "__docId__": 26,
    "kind": "typedef",
    "name": "Location",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Location",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{string} lat - latitude"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} lon - longitude"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Location"
    }
  },
  {
    "__docId__": 27,
    "kind": "typedef",
    "name": "Field",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Field",
    "access": null,
    "description": "A Field in an Entry can have one of the following types that can be defined in Contentful. See <a href=\"https://www.contentful.com/developers/docs/references/field-type/\">Field Types</a> for more details.",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Field"
    }
  },
  {
    "__docId__": 28,
    "kind": "typedef",
    "name": "Entry",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~Entry",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{Entities.Sys} sys - Standard system metadata with additional entry specific properties"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Entities.Link} sys.contentType - Content Type used by this Entry"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string=} sys.locale - If present, indicates the locale which this entry uses"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object<EntryFields.Field>} fields - Object with content for each field"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Entry as a plain JS object"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Entry"
    }
  },
  {
    "__docId__": 29,
    "kind": "function",
    "name": "wrapEntry",
    "memberof": "lib/entities/entry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/entry.js~wrapEntry",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/entities/entry.js",
    "importStyle": "{wrapEntry}",
    "description": "",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Raw entry data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Entry"
      ],
      "spread": false,
      "description": "Wrapped entry data"
    }
  },
  {
    "__docId__": 30,
    "kind": "typedef",
    "name": "EntryCollection",
    "memberof": "lib/entities/entry.js",
    "static": true,
    "longname": "lib/entities/entry.js~EntryCollection",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{number} total"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} skip"
      },
      {
        "tagName": "@prop",
        "tagValue": "{number} limit"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<Entities.Entry>} items"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<Object>=} errors - Array of errors that might occur when retrieving entries."
      },
      {
        "tagName": "@prop",
        "tagValue": "{Object<Array>=} includes - Object with arrays of includes for Entries and Assets. This will be present if resolveLinks is on, and any linked entries or assets exist. Those links will be resolved in the Entries present in the items array, but they are also present here in raw form."
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Entry collection as a plain JS object"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the entry collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take."
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "EntryCollection"
    }
  },
  {
    "__docId__": 31,
    "kind": "function",
    "name": "wrapEntryCollection",
    "memberof": "lib/entities/entry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/entry.js~wrapEntryCollection",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/entities/entry.js",
    "importStyle": "{wrapEntryCollection}",
    "description": "Data is also mixed in with link getters if links exist and includes were requested",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Raw entry collection data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EntryCollection"
      ],
      "spread": false,
      "description": "Wrapped entry collection data"
    }
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "prepareIncludes",
    "memberof": "lib/entities/entry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/entry.js~prepareIncludes",
    "access": null,
    "export": false,
    "importPath": "contentful/lib/entities/entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "includes",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "items",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "file",
    "name": "lib/entities/index.js",
    "content": "import * as space from './space'\nimport * as entry from './entry'\nimport * as asset from './asset'\nimport * as contentType from './content-type'\n\nexport default {\n  space,\n  entry,\n  asset,\n  contentType\n}\n",
    "static": true,
    "longname": "lib/entities/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 34,
    "kind": "file",
    "name": "lib/entities/space.js",
    "content": "import {toPlainObject, freezeSys} from 'contentful-sdk-core'\n\n/**\n * @memberof Entities\n * @typedef Space\n * @prop {Object} sys - System metadata\n * @prop {string} sys.id - Space id\n * @prop {string} sys.type - Entity type\n * @prop {string} name - Space name\n * @prop {Array<string>} locales - Array with locale codes\n * @prop {function(): Object} toPlainObject() - Returns this Space as a plain JS object\n */\n\n/**\n * @private\n * @param  {Object} data - API response for a Space\n * @return {Space}\n */\nexport function wrapSpace (data) {\n  return freezeSys(toPlainObject(data))\n}\n",
    "static": true,
    "longname": "lib/entities/space.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 35,
    "kind": "typedef",
    "name": "Space",
    "memberof": "lib/entities/space.js",
    "static": true,
    "longname": "lib/entities/space.js~Space",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{Object} sys - System metadata"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} sys.id - Space id"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} sys.type - Entity type"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} name - Space name"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<string>} locales - Array with locale codes"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Space as a plain JS object"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "Space"
    }
  },
  {
    "__docId__": 36,
    "kind": "function",
    "name": "wrapSpace",
    "memberof": "lib/entities/space.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/entities/space.js~wrapSpace",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/entities/space.js",
    "importStyle": "{wrapSpace}",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "API response for a Space"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Space"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 37,
    "kind": "file",
    "name": "lib/mixins/link-getters.js",
    "content": "import map from 'lodash/map'\nimport each from 'lodash/each'\nimport find from 'lodash/find'\nimport get from 'lodash/get'\nimport partial from 'lodash/partial'\nimport memoize from 'lodash/memoize'\n\nlet resolveAllLocales = false\n/**\n * Sets getters on links for a given response\n * @private\n * @param {Array<Entry|Asset|DeletedEntry|DeletedAsset>} items\n * @param {Object} includes - Object with lists of Entry, Asset, DeletedEntry and DeletedAsset\n */\nexport default function mixinLinkGetters (items, includes, resolveForAllLocales) {\n  resolveAllLocales = resolveForAllLocales\n  const linkGetter = memoize(getLinksFromIncludes, memoizationResolver)\n  each(items, (item) => {\n    // TODO: workaround the preview endpoint extra locale this should be removed when\n    // it is fixed on the backend\n    if (resolveForAllLocales && item.sys.locale) {\n      delete item.sys.locale\n    }\n    setLocalizedFieldGetters(item.fields, !!item.sys.locale)\n  })\n\n  /**\n   * If a field does not have a locale defined in sys, the content of that field\n   * is an object where the keys are each available locale, and we need to iterate\n   * over each of those\n   * @private\n   * @param {Object} fields - Fields object\n   * @param {boolean} hasLocale - If entry has been requested with a locale\n   */\n  function setLocalizedFieldGetters (fields, hasLocale) {\n    if (hasLocale) {\n      setFieldGettersForFields(fields)\n    } else {\n      each(fields, (localizedField) => setFieldGettersForFields(localizedField))\n    }\n  }\n\n  /**\n   * Sets getters on each link field or list of link fields for each item\n   * @private\n   * @param {Object} fields - Fields object\n   */\n  function setFieldGettersForFields (fields) {\n    each(fields, (field, fieldKey) => {\n      if (Array.isArray(field)) {\n        addGetterForLinkArray(field, fieldKey, fields)\n      } else {\n        addGetterForLink(field, fieldKey, fields)\n      }\n    })\n  }\n\n  /**\n   * Sets a getter which resolves the link of the given fieldKey in fields\n   * @private\n   * @param {Object} field - Field object\n   * @param {string} fieldKey\n   * @param {Object} fields - Fields object\n   */\n  function addGetterForLink (field, fieldKey, fields) {\n    if (get(field, 'sys.type') === 'Link') {\n      Object.defineProperty(fields, fieldKey, {\n        get: partial(linkGetter, field)\n      })\n    }\n  }\n\n  /**\n   * Sets a getter which resolves the array of links of the given fieldKey in fields\n   * @private\n   * @param {Array<Object>} field - List field array\n   * @param {string} fieldKey\n   * @param {Object} fields - Fields object\n   */\n  function addGetterForLinkArray (listField, fieldKey, fields) {\n    if (get(listField[0], 'sys.type') === 'Link') {\n      Object.defineProperty(fields, fieldKey, {\n        get: function () {\n          return map(listField, partial(linkGetter))\n        }\n      })\n    }\n  }\n\n  /**\n   * Looks for given link field in includes.\n   * If linked entity is not found, it returns the original link.\n   * This method shouldn't be used directly, and it's memoized whenever this\n   * module's main method is used.\n   * This is done to prevent the same link being resolved multiple times.\n   * @private\n   * @param {Object} field - Field object\n   * @return {Object} Field, or link if field not resolved\n   */\n  function getLinksFromIncludes (field) {\n    var link = find(includes[field.sys.linkType], ['sys.id', field.sys.id])\n    if (link && link.fields) {\n      // TODO: workaround the preview endpoint extra locale this should be removed when\n      // it is fixed on the backend\n      if (resolveAllLocales && link.sys.locale) {\n        delete link.sys.locale\n      }\n      setLocalizedFieldGetters(link.fields, !!link.sys.locale)\n      return link\n    }\n    return field\n  }\n\n  function memoizationResolver (link) {\n    return link.sys.id\n  }\n}\n",
    "static": true,
    "longname": "lib/mixins/link-getters.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 38,
    "kind": "variable",
    "name": "resolveAllLocales",
    "memberof": "lib/mixins/link-getters.js",
    "static": true,
    "longname": "lib/mixins/link-getters.js~resolveAllLocales",
    "access": null,
    "export": false,
    "importPath": "contentful/lib/mixins/link-getters.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "function",
    "name": "mixinLinkGetters",
    "memberof": "lib/mixins/link-getters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/mixins/link-getters.js~mixinLinkGetters",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/mixins/link-getters.js",
    "importStyle": "mixinLinkGetters",
    "description": "Sets getters on links for a given response",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Entry|Asset|DeletedEntry|DeletedAsset>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "includes",
        "description": "Object with lists of Entry, Asset, DeletedEntry and DeletedAsset"
      }
    ]
  },
  {
    "__docId__": 40,
    "kind": "file",
    "name": "lib/mixins/stringify-safe.js",
    "content": "import jsonStringifySafe from 'json-stringify-safe'\n\nexport default function mixinStringifySafe (data) {\n  return Object.defineProperty(data, 'stringifySafe', {\n    enumerable: false,\n    configurable: false,\n    writable: false,\n    value: function (serializer = null, indent = '') {\n      return jsonStringifySafe(this, serializer, indent, (key, value) => {\n        return {\n          sys: {\n            type: 'Link',\n            linkType: 'Entry',\n            id: value.sys.id,\n            circular: true\n          }\n        }\n      })\n    }\n  })\n}\n",
    "static": true,
    "longname": "lib/mixins/stringify-safe.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 41,
    "kind": "function",
    "name": "mixinStringifySafe",
    "memberof": "lib/mixins/stringify-safe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/mixins/stringify-safe.js~mixinStringifySafe",
    "access": null,
    "export": true,
    "importPath": "contentful/lib/mixins/stringify-safe.js",
    "importStyle": "mixinStringifySafe",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "file",
    "name": "lib/paged-sync.js",
    "content": "/**\n * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n * @namespace Sync\n */\nimport filter from 'lodash/filter'\nimport cloneDeep from 'lodash/cloneDeep'\nimport {createRequestConfig, freezeSys, toPlainObject} from 'contentful-sdk-core'\nimport mixinLinkGetters from './mixins/link-getters'\nimport mixinStringifySafe from './mixins/stringify-safe'\n\n/**\n * @memberof Sync\n * @typedef SyncCollection\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Deleted Entries are the same as Entries, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedEntry\n * @type Entities.Entry\n */\n\n/**\n * Deleted Assets are the same as Assets, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedAsset\n * @type Entities.Asset\n */\n\n/**\n * This module retrieves all the available pages for a sync operation\n * @private\n * @param {Object} http - HTTP client\n * @param {Object} query - Query object\n * @param {boolean} resolveLinks - If links should be resolved\n * @return {Promise<SyncCollection>}\n */\nexport default function pagedSync (http, query, resolveLinks) {\n  if (!query || (!query.initial && !query.nextSyncToken)) {\n    throw new Error('Please provide one of `initial` or `nextSyncToken` parameters for syncing')\n  }\n\n  if (query && query.content_type && !query.type) {\n    query.type = 'Entry'\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.')\n  }\n\n  if (query.nextSyncToken) {\n    query.sync_token = query.nextSyncToken\n    delete query.initial\n    delete query.nextSyncToken\n  }\n\n  return getSyncPage(http, [], query)\n  .then((response) => {\n    // clones response.items used in includes because we don't want these to be mutated\n    if (resolveLinks) {\n      mixinLinkGetters(response.items, mapIncludeItems(cloneDeep(response.items)))\n    }\n    // maps response items again after getters are attached\n    const mappedResponseItems = mapResponseItems(response.items)\n    mappedResponseItems.nextSyncToken = response.nextSyncToken\n    return freezeSys(mixinStringifySafe(toPlainObject(mappedResponseItems)))\n  }, (error) => {\n    throw error.data\n  })\n}\n\n/**\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object} Entities mapped to an object for each entity type\n */\nfunction mapResponseItems (items) {\n  return {\n    entries: filter(items, ['sys.type', 'Entry']),\n    assets: filter(items, ['sys.type', 'Asset']),\n    deletedEntries: filter(items, ['sys.type', 'DeletedEntry']),\n    deletedAssets: filter(items, ['sys.type', 'DeletedAsset'])\n  }\n}\n\n/**\n * Creates an object similar to the one retrieved on `includes` from the `entries`\n * endpoint, for usage with the link getters mixin\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object}\n */\nfunction mapIncludeItems (items) {\n  return {\n    Entry: filter(items, ['sys.type', 'Entry']),\n    Asset: filter(items, ['sys.type', 'Asset'])\n  }\n}\n\n/**\n * If the response contains a nextPageUrl, extracts the sync token to get the\n * next page and calls itself again with that token.\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\n * and returns it.\n * On each call of this function, any retrieved items are collected in the\n * supplied items array, which gets returned in the end\n * @private\n * @param {Object} http\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @param {Object} query\n * @return {Promise<{items: Array, nextSyncToken: string}>}\n */\nfunction getSyncPage (http, items, query) {\n  return http.get('sync', createRequestConfig({query: query}))\n  .then((response) => {\n    const data = response.data\n    items = items.concat(data.items)\n    if (data.nextPageUrl) {\n      delete query.initial\n      query.sync_token = getToken(data.nextPageUrl)\n      return getSyncPage(http, items, query)\n    } else if (data.nextSyncUrl) {\n      return {\n        items: items,\n        nextSyncToken: getToken(data.nextSyncUrl)\n      }\n    }\n  })\n}\n\n/**\n * Extracts token out of an url\n * @private\n */\nfunction getToken (url) {\n  const urlParts = url.split('?')\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : ''\n}\n",
    "static": true,
    "longname": "lib/paged-sync.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 43,
    "kind": "typedef",
    "name": "SyncCollection",
    "memberof": "lib/paged-sync.js",
    "static": true,
    "longname": "lib/paged-sync.js~SyncCollection",
    "access": null,
    "description": "",
    "unknown": [
      {
        "tagName": "@prop",
        "tagValue": "{Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs."
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs."
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync"
      },
      {
        "tagName": "@prop",
        "tagValue": "{Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync"
      },
      {
        "tagName": "@prop",
        "tagValue": "{string} nextSyncToken - Token to be sent to the next sync call"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object"
      },
      {
        "tagName": "@prop",
        "tagValue": "{function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take."
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "SyncCollection"
    }
  },
  {
    "__docId__": 44,
    "kind": "typedef",
    "name": "DeletedEntry",
    "memberof": "lib/paged-sync.js",
    "static": true,
    "longname": "lib/paged-sync.js~DeletedEntry",
    "access": null,
    "description": "Deleted Entries are the same as Entries, but only appear on the sync API.",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "DeletedEntry"
    }
  },
  {
    "__docId__": 45,
    "kind": "typedef",
    "name": "DeletedAsset",
    "memberof": "lib/paged-sync.js",
    "static": true,
    "longname": "lib/paged-sync.js~DeletedAsset",
    "access": null,
    "description": "Deleted Assets are the same as Assets, but only appear on the sync API.",
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "DeletedAsset"
    }
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "pagedSync",
    "memberof": "lib/paged-sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/paged-sync.js~pagedSync",
    "access": "private",
    "export": true,
    "importPath": "contentful/lib/paged-sync.js",
    "importStyle": "pagedSync",
    "description": "This module retrieves all the available pages for a sync operation",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": "HTTP client"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "Query object"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "resolveLinks",
        "description": "If links should be resolved"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<SyncCollection>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 47,
    "kind": "function",
    "name": "mapResponseItems",
    "memberof": "lib/paged-sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/paged-sync.js~mapResponseItems",
    "access": "private",
    "export": false,
    "importPath": "contentful/lib/paged-sync.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Entities mapped to an object for each entity type"
    }
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "mapIncludeItems",
    "memberof": "lib/paged-sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/paged-sync.js~mapIncludeItems",
    "access": "private",
    "export": false,
    "importPath": "contentful/lib/paged-sync.js",
    "importStyle": null,
    "description": "Creates an object similar to the one retrieved on `includes` from the `entries`\nendpoint, for usage with the link getters mixin",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "getSyncPage",
    "memberof": "lib/paged-sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/paged-sync.js~getSyncPage",
    "access": "private",
    "export": false,
    "importPath": "contentful/lib/paged-sync.js",
    "importStyle": null,
    "description": "If the response contains a nextPageUrl, extracts the sync token to get the\nnext page and calls itself again with that token.\nOtherwise, if the response contains a nextSyncUrl, extracts the sync token\nand returns it.\nOn each call of this function, any retrieved items are collected in the\nsupplied items array, which gets returned in the end",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "http",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{items: Array, nextSyncToken: string}>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "getToken",
    "memberof": "lib/paged-sync.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/paged-sync.js~getToken",
    "access": "private",
    "export": false,
    "importPath": "contentful/lib/paged-sync.js",
    "importStyle": null,
    "description": "Extracts token out of an url",
    "lineNumber": 140,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]